# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@v2.0.3
        with:
          deno-version: v2.x

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      # - name: Verify formatting
      #   run: deno fmt --check

      # - name: Run linter
      #   run: deno lint

      # - name: Run tests
      #  run: deno test -A

      - name: Run compiler
        run: deno compile --target x86_64-pc-windows-msvc --allow-net --allow-run --allow-read main.ts

      - uses: actions/upload-artifact@v4.6.2
        with:
          # Name of the artifact to upload.
          # Optional. Default is 'artifact'
          name: spotify-library-cleaner-x86_64-pc-windows-msvc.exe

          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: spotify-library-cleaner.exe

          # The desired behavior if no files are found using the provided path.
          # Available Options:
          #   warn: Output a warning but do not fail the action
          #   error: Fail the action with an error message
          #   ignore: Do not output any warnings or errors, the action does not fail
          # Optional. Default is 'warn'
          if-no-files-found: error
